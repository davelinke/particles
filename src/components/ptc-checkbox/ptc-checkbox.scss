@import "../ptc/ptc";

@mixin p($propertyName, $propertyState, $propertyValue){
    @include prop(checkbox, null, toggle, $propertyName, $propertyState, $propertyValue);
}

$checkbox-dimension:16px;

:host {
    display:inline-block;
    user-select: none;
    padding-inline-start: calc(#{$checkbox-dimension} + 0.5rem);
    position: relative;
    cursor: pointer;
    outline: none;
}

:host::before{
    content: " ";
    display: block;
    @include p(width, idle, $checkbox-dimension);
    @include p(height, idle, $checkbox-dimension);
    @include p(border-style, idle, $elements-input-border-style);
    @include p(border-width, idle, $elements-input-border-width);
    @include p(border-color, idle, $color-input-border-idle);
    @include p(border-radius, idle, $border-radius);
    @include p(background-color, idle, $color-input-background);
    margin-inline-end: 0.5rem;
    position: absolute;
    top:0;
    left:0;

}

:host(:focus)::before{
    @include p(border-color, focus, $color-input-border-selected);
}

:host([checked])::before{
    @include p(background-color, checked, $color-cta-idle);
    @include p(background-image, checked, url(data:image/svg+xml,%3Csvg%20width%3D%22500%22%20height%3D%22500%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22M500%200v500H0V0h500zM380.816%20100L202.632%20282.637l-83.464-79.121-58.642%2058.673L202.632%20400l236.842-241.342L380.816%20100z%22%20fill%3D%22%23FFF%22%20fill-rule%3D%22evenodd%22%2F%3E%3C%2Fsvg%3E));
    background-size:cover;
}

:host([indeterminate])::before{
    @include p(background-color, indeterminate, $color-disabled);
    @include p(background-image, indeterminate, url(data:image/svg+xml,%3Csvg%20width%3D%22500%22%20height%3D%22500%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22M500%200v500H0V0h500zm-60.526%20206H60.526v88h378.948v-88z%22%20fill%3D%22%23FFF%22%20fill-rule%3D%22evenodd%22%2F%3E%3C%2Fsvg%3E));
    background-size:cover;
}

:host([disbled]){
    pointer-events: none;
    cursor:not-allowed;
}



:host([disabled]:focus)::before{
    @include p(border-color, focus, $color-input-border-idle);
}

:host([disabled])::before{
    @include p(opacity, disabled, $elements-disabled-opacity);
}

:host([checked][disabled])::before,
:host([indeterminate][disabled])::before{
    @include p(background-color, disabled, $color-disabled);
}